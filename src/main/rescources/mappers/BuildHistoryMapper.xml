<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zzxcloud.elicend.api.mapper.BuildHistoryMapper">

    <sql id="BuildHistoryColumns">
        a.id,
        a.project_id,
        a.git_msg,
        a.build_msg,
        a.run_msg,
        a.state,
        a.gmt_create,
        a.gmt_modified,
        a.is_delete
    </sql>

    <select id="getById" resultType="cn.zzxcloud.elicend.api.entity.BuildHistory">
        SELECT
        <include refid="BuildHistoryColumns" />
        FROM
        build_history AS a
        WHERE
        a.id = #{id}
        AND is_delete=0
    </select>

    <select id="getByProjectId" resultType="cn.zzxcloud.elicend.api.entity.BuildHistory">
        SELECT
        <include refid="BuildHistoryColumns" />
        FROM
        build_history AS a
        WHERE
        a.project_id = #{projectId}
        AND is_delete=0
        ORDER BY a.gmt_modified DESC
    </select>

    <select id="selectAll" resultType="cn.zzxcloud.elicend.api.entity.BuildHistory">
        SELECT
        <include refid="BuildHistoryColumns" />
        FROM
        build_history AS a
        WHERE is_delete=0
        ORDER BY a.gmt_modified DESC
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM build_history AS a
        <where>
            is_delete=0
        </where>
    </select>

    <insert id="insert" parameterType="cn.zzxcloud.elicend.api.entity.BuildHistory">
        INSERT INTO build_history (
          `project_id`,
          `git_msg`,
          `build_msg`,
          `run_msg`,
          `state`
        )
        VALUES
          (
            #{project_id},
            #{git_msg},
            #{build_msg},
            #{run_msg},
            #{state}
          )
    </insert>

    <update id="delete">
        UPDATE
          build_history
        SET
          is_delete = 1
        WHERE id = #{id}
    </update>

    <update id="updateStateById">
        UPDATE
          build_history
        SET
          `state`=#{state}
        WHERE id = #{id}
    </update>


    <update id="update">
        UPDATE
          build_history
        SET
          `git_msg` = #{git_msg},
          `build_msg` = #{build_msg},
          `run_msg` = #{run_msg},
          `state` = #{state}
        WHERE id = #{id}
    </update>

</mapper>